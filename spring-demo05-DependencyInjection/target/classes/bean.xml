<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd">

    <!--Spring中的依赖注入-->
    <!--三类能注入的数据
    基本类型和String
    其他bean类型（在配置文件中或者注释配置过的bean）
    复杂类型/集合类型

    三种注入方式
    使用构造函数提供
    使用set方法提供
    使用注解方式提供-->


    <!--构造函数注入
    使用constructor-arg标签 在bean标签的内部
    标签中的属性
    type：用于指定要注入的数据类型，该数据类型也是构造函数中某个或某些参数的类型
    index：用于指定要注入的数据给构造函数中指定索引位置的参数赋值，索引的位置是从0开始
    name：用于指定给构造函数中指定名称的参数赋值（常用的）
    ======= 以上3哥用于指定给构造函数中哪个参数赋值  =======
    value：用于提供基本类型和String类型的数据
    ref：用于指定其他的bean类型数据，它指的就是在Spring的IOC核心容器出现过的bean对象

    优势：在获取bean对象时，注入数据是必须的操作，否则对象无法创建成功
    弊端：改变了bean对象的实例化方式，使我们在创建对象时，如果用不到这些数据，也必须提供
    -->
    <bean id="AccountService" class="com.xuesong.service.imp.AccountServiceImp" >
        <constructor-arg name="name" value="雪松"></constructor-arg>
        <constructor-arg name="age" value="18"></constructor-arg>
        <constructor-arg name="birthday" ref="now"></constructor-arg>
    </bean>

    <!--配置一个日期对象-->
    <bean id="now" class="java.util.Date"></bean>


    <!--set方法注入
    使用property标签 在bean标签的内部
    标签中的属性
    name：用于指定注入时所调用的set方法名称
    value：用于提供基本类型和String类型的数据
    ref：用于指定其他的bean类型数据，它指的就是在Spring的IOC核心容器出现过的bean对象

    优势：创建对象时没有明确的限制，可以直接使用默认构造函数
    弊端：如果某个成员必须有值，则获取对象是有可能set方法没有执行
    -->

    <bean id="AccountService2" class="com.xuesong.service.imp.AccountServiceImp2" >
       <property name="name" value="Test"></property>
       <property name="age" value="24"></property>
       <property name="birthday" ref="now"></property>
    </bean>

    <!--复杂类型的注入/集合类型的注入-->
    <bean id="AccountService3" class="com.xuesong.service.imp.AccountServiceImp3" >
        <property name="myStrs">
            <array>
                <value>aaa</value>
                <value>bbb</value>
                <value>ccc</value>
            </array>
        </property>

        <property name="myList">
            <list>
                <value>aaa</value>
                <value>bbb</value>
                <value>ccc</value>
            </list>
        </property>

        <property name="mySet">
            <set>
                <value>aaa</value>
                <value>bbb</value>
                <value>ccc</value>
            </set>
        </property>

        <property name="myMap">
            <map>
                <entry key="testA" value="testB"></entry>
                <entry key="testB" value="123"></entry>
            </map>
        </property>

        <property name="myProps">
            <props>
                <prop key="testC">ccc</prop>
                <prop key="testD">ddd</prop>

            </props>
        </property>

    </bean>

</beans>